[
  {
    "Id": "64418",
    "ThreadId": "19489",
    "Html": "\r\nAre there any plans to make the collections Xml Serializable friendly?<br />I've encounted this issue with the MultiDictionary object.<br /><br /><br />One of the obstacles...is the lack of default constructors.  Here is one I tried to implement.<br /><br />        public MultiDictionary()<br />            : this(true, EqualityComparer&lt;TKey&gt;.Default, EqualityComparer&lt;TValue&gt;.Default)<br />        {<br />                        //I picked \"true\" for allow duplicates.....<br />        }<br /><br />I attempted this inclusion...and it helped.<br /><br />What's getting me is the implementation of a ..Default Accessor Implementation..<br />I have to admit, my Generic(s) skills are average at best.<br /><br />But something like this is apparently missing.  Here is where I got stuck.<br /><br />public Something?? this<a href=\"http://www.codeplex.com/PowerCollections/Wiki/View.aspx?title=int%20index\">int index</a><br />{<br />get<br />set<br />}<br /><br />I tried a couple of different things...but either my lack of ability with generics or not discerning the concrete or base object correctly is hindering me.<br /><br /><br />Here is my test object ... which I can create...but I get the issues when I try to serialize it to Xml.<br /><br /><br /><a href=\"http://www.codeplex.com/PowerCollections/Wiki/View.aspx?title=Serializable\">Serializable</a><br />    public class PowerCollectionMultiDictionaryTestWrapperForXml<br />    {<br />        private string _name = string.Empty;<br />        public string Name<br />        {<br />            get { return _name; }<br />            set { _name = value; }<br />        }<br /><br />        private int _age = 0;<br />        public int Age<br />        {<br />            get { return _age; }<br />            set { _age = value; }<br />        }<br /><br />        Wintellect.PowerCollections.MultiDictionary&lt;Guid, Guid&gt; _doubleGuidMultiDictionary = new Wintellect.PowerCollections.MultiDictionary&lt;Guid, Guid&gt;(true);<br /><br />        public Wintellect.PowerCollections.MultiDictionary&lt;Guid, Guid&gt; DoubleGuidMultiDictionary<br />        {<br />            get { return _doubleGuidMultiDictionary; }<br />            set { _doubleGuidMultiDictionary = value; }<br />        }<br />    }<br /><br /><br /><br />//and code to instantiate<br />                PowerCollectionMultiDictionaryTestWrapperForXml pct = new PowerCollectionMultiDictionaryTestWrapperForXml();<br />                pct.Name = \"Sloan\";<br />                pct.Age = 35;<br />                pct.DoubleGuidMultiDictionary.Add(Guid.NewGuid(), Guid.NewGuid());<br /><br /><br />I'll continue to work on it..but thought I'd at least list out the issue.<br /><br /><br />Since the code is:<br /><br /><a href=\"http://www.codeplex.com/PowerCollections/Wiki/View.aspx?title=Serializable\">Serializable</a><br />    public class MultiDictionary&lt;TKey, TValue&gt; : MultiDictionaryBase&lt;TKey, TValue&gt;, ICloneable<br />    {}<br /><br />The intent definately looks to be \"Make it Serializable\".<br /><br />Thanks.<br /><br /><br /><br /><br />",
    "PostedDate": "2007-12-20T14:03:06.423-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]